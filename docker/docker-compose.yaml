version: '3'
services:
  cassandra:
    image: cassandra:3.11
    ports:
      - "9042:9042"
#  statsd:
#    image: graphiteapp/graphite-statsd
#    ports:
#      - "8080:80"
#      - "2003:2003"
#      - "8125:8125"
#      - "8126:8126"
  cadence:
    image: ubercadence/server:master-auto-setup
    ports:
      - "7933:7933"
      - "7934:7934"
      - "7935:7935"
      - "7939:7939"
    environment:
      - "CASSANDRA_SEEDS=cassandra"
    #  - "STATSD_ENDPOINT=statsd:8125"
      - "DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml"
    depends_on:
      - cassandra
#      - statsd
  cadence-web:
    image: ubercadence/web:3.4.1
    environment:
      - "CADENCE_TCHANNEL_PEERS=cadence:7933"
    ports:
      - "8088:8088"
    depends_on:
      - cadence

#  prometheus:
#    image: prom/prometheus:v2.18.1
#    container_name: prometheus
#    volumes:
#      - ./prometheus:/etc/prometheus
#      - prometheus_data:/prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
#      - '--web.console.libraries=/etc/prometheus/console_libraries'
#      - '--web.console.templates=/etc/prometheus/consoles'
#      - '--storage.tsdb.retention.time=200h'
#      - '--web.enable-lifecycle'
#    restart: unless-stopped
#    expose:
#      - 9090
#    labels:
#      org.label-schema.group: "monitoring"
#
#  grafana:
#    image: grafana/grafana:6.7.3
#    container_name: grafana
#    volumes:
#      - grafana_data:/var/lib/grafana
#      - ./grafana/provisioning:/etc/grafana/provisioning
#    environment:
#      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}N
#      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
#      - GF_USERS_ALLOW_SIGN_UP=false
#    restart: unless-stopped
#    expose:
#      - 3000
#    labels:
#      org.label-schema.group: "monitoring"